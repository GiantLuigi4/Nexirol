plugins {
    id 'application'
    id 'java'
}

group = 'tfc'
version = '1.0-SNAPSHOT'

project.ext.lwjglVersion = "3.3.3"
project.ext.lwjglNatives = "natives-windows"

repositories {
    mavenCentral()
    maven { url = 'https://dl.bintray.com/jmonkeyengine/org.jmonkeyengine/' }
    flatDir {
        dir("libs")
    }
}

configurations {
    extraLibs
}

project.ext.jomlVersion = "1.10.5"
project.ext.joml_primitivesVersion = "1.10.0"
project.ext.steamworks4jVersion = "1.9.0"
project.ext.steamworks4j_serverVersion = "1.9.0"

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    extraLibs platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    // TODO: extralibs depends on choice of physics engine
//    implementation group: 'com.github.stephengold', name: 'jbullet', version: '1.0.2'
    // https://mvnrepository.com/artifact/com.github.stephengold/Libbulletjme
    implementation group: 'com.github.stephengold', name: 'Libbulletjme', version: '21.1.0'
    implementation group: 'org.jmonkeyengine', name: 'jme3-bullet', version: '3.3.2-stable'
    implementation group: 'org.jmonkeyengine', name: 'jme3-bullet-native', version: '3.3.2-stable'

    // https://mvnrepository.com/artifact/de.fabmax/physx-jni
    implementation group: 'de.fabmax', name: 'physx-jni', version: '2.3.2'
    runtimeOnly("de.fabmax:physx-jni:2.3.2:natives-windows")
    runtimeOnly("de.fabmax:physx-jni:2.3.2:natives-linux")
    runtimeOnly("de.fabmax:physx-jni:2.3.2:natives-macos")
    runtimeOnly("de.fabmax:physx-jni:2.3.2:natives-macos-arm64")
//    runtimeOnly(files("physx-jni-natives-linux-cuda-2.3.2.jar"))
//    runtimeOnly(files("physx-jni-natives-windows-cuda-2.3.2.jar"))

    // cores
    extraLibs "org.lwjgl:lwjgl"
    extraLibs "org.lwjgl:lwjgl::$lwjglNatives"

    // graphics
    extraLibs "org.lwjgl:lwjgl-shaderc"
    extraLibs "org.lwjgl:lwjgl-shaderc::$lwjglNatives"
    extraLibs "org.lwjgl:lwjgl-vulkan"

    // windowing
    extraLibs "org.lwjgl:lwjgl-glfw"
    extraLibs "org.lwjgl:lwjgl-glfw::$lwjglNatives"

    // compute
    implementation "org.lwjgl:lwjgl-opencl"
    implementation "org.lwjgl:lwjgl-cuda"

    // file
    implementation "org.lwjgl:lwjgl-nfd"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"

    // image
    extraLibs "org.lwjgl:lwjgl-stb"
    extraLibs "org.lwjgl:lwjgl-stb::$lwjglNatives"

    // font
    implementation "org.lwjgl:lwjgl-freetype"
    runtimeOnly "org.lwjgl:lwjgl-freetype::$lwjglNatives"

    // mesh
    implementation "org.lwjgl:lwjgl-meshoptimizer"
    runtimeOnly "org.lwjgl:lwjgl-meshoptimizer::$lwjglNatives"

    // audio
    implementation "org.lwjgl:lwjgl-opus"
    runtimeOnly "org.lwjgl:lwjgl-opus::$lwjglNatives"
    implementation "org.lwjgl:lwjgl-openal"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"

    // optimization
    implementation "org.lwjgl:lwjgl-tootle"
    runtimeOnly "org.lwjgl:lwjgl-tootle::$lwjglNatives"

    // math
    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.joml:joml-primitives:${joml_primitivesVersion}"
    implementation "com.code-disaster.steamworks4j:steamworks4j:${steamworks4jVersion}"
    implementation "com.code-disaster.steamworks4j:steamworks4j-server:${steamworks4j_serverVersion}"

    extraLibs "tfc:Renirol:1.0-SNAPSHOT1"

    configurations.implementation.extendsFrom(configurations.extraLibs)
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': "MemoryTracker"
    }
    from {
//        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task runApp(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = "tfc.test.Main"
}

tasks.withType(Jar.class).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
